/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package faceverificationgui;

import com.sun.org.apache.bcel.internal.generic.FNEG;
import javax.swing.JFrame;

/**
 *
 * @author bsidb
 */
public class MainGUI extends javax.swing.JFrame {

    public static MainGUI currentGUI;
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelFeatureExtractionSetting = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelClassifierSetting = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabelFaceDetectionSetting = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        TrainingMenu = new javax.swing.JMenu();
        detectionMenuItem = new javax.swing.JMenuItem();
        extrationMenuItem = new javax.swing.JMenuItem();
        sampleGenerationMenuItem = new javax.swing.JMenuItem();
        classifierTrainingMenuItem = new javax.swing.JMenuItem();
        jMenuTest = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 48)); // NOI18N
        jLabel1.setText("Welcome!");
        getContentPane().add(jLabel1, new java.awt.GridBagConstraints());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Adobe Heiti Std R", 0, 24), java.awt.Color.orange)); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("Feature Extraction Setting:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        jPanel1.add(jLabelFeatureExtractionSetting, gridBagConstraints);

        jLabel4.setText("Classifier Setting:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        jPanel1.add(jLabelClassifierSetting, gridBagConstraints);

        jLabel6.setText("Face Detection Setting:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        jPanel1.add(jLabelFaceDetectionSetting, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(jPanel1, gridBagConstraints);

        TrainingMenu.setMnemonic('f');
        TrainingMenu.setText("Training");

        detectionMenuItem.setMnemonic('o');
        detectionMenuItem.setText("Face Detection");
        detectionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detectionMenuItemActionPerformed(evt);
            }
        });
        TrainingMenu.add(detectionMenuItem);

        extrationMenuItem.setMnemonic('s');
        extrationMenuItem.setText("Feature Extraction");
        extrationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extrationMenuItemActionPerformed(evt);
            }
        });
        TrainingMenu.add(extrationMenuItem);

        sampleGenerationMenuItem.setMnemonic('a');
        sampleGenerationMenuItem.setText("Training Set Generation");
        sampleGenerationMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sampleGenerationMenuItemActionPerformed(evt);
            }
        });
        TrainingMenu.add(sampleGenerationMenuItem);

        classifierTrainingMenuItem.setMnemonic('x');
        classifierTrainingMenuItem.setText("Classifier Training");
        classifierTrainingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifierTrainingMenuItemActionPerformed(evt);
            }
        });
        TrainingMenu.add(classifierTrainingMenuItem);

        jMenuTest.setText("Classifier Test");
        jMenuTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTestActionPerformed(evt);
            }
        });
        TrainingMenu.add(jMenuTest);

        menuBar.add(TrainingMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Use");
        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void classifierTrainingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifierTrainingMenuItemActionPerformed
        JFrame f = new ClassifierTrainingForm();
        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        f.setVisible(true);

    }//GEN-LAST:event_classifierTrainingMenuItemActionPerformed

    private void detectionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detectionMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_detectionMenuItemActionPerformed

    private void extrationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extrationMenuItemActionPerformed
        JFrame f = new FeatureExtractionForm();
        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        f.setVisible(true);
        
    }//GEN-LAST:event_extrationMenuItemActionPerformed

    private void sampleGenerationMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sampleGenerationMenuItemActionPerformed
        // TODO add your handling code here:
        JFrame f = new SampleGenerationForm();
        f.setVisible(true);
        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    }//GEN-LAST:event_sampleGenerationMenuItemActionPerformed

    private void jMenuTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTestActionPerformed
        // TODO add your handling code here:
        JFrame f = new ClassifierTestingForm();
        f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        f.setVisible(true);
    }//GEN-LAST:event_jMenuTestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
             
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                currentGUI = new MainGUI();
                javax.swing.JFrame mainWindow = currentGUI;
                mainWindow.setLocationRelativeTo(null);
                mainWindow.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu TrainingMenu;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem classifierTrainingMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem detectionMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem extrationMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelClassifierSetting;
    private javax.swing.JLabel jLabelFaceDetectionSetting;
    private javax.swing.JLabel jLabelFeatureExtractionSetting;
    private javax.swing.JMenuItem jMenuTest;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem sampleGenerationMenuItem;
    // End of variables declaration//GEN-END:variables

    public CurrentSettings settings = new CurrentSettings();

    public class CurrentSettings{
        public String featureExtractionSettingString;
        public String classifierSettingString;
        public String faceDetectionString;
        
        public void updateView(){
            jLabelClassifierSetting.setText(classifierSettingString);
            jLabelFaceDetectionSetting.setText(faceDetectionString);
            jLabelFeatureExtractionSetting.setText(featureExtractionSettingString);
        }
    }
    
    public void setFESetting(String cmd){
        settings.featureExtractionSettingString = cmd;
        settings.updateView();
    }
    
    public void setCSSetting(String cmd){
        settings.classifierSettingString = cmd;
        settings.updateView();
    }
    
    public void setFDSetting(String cmd){
        settings.faceDetectionString = cmd;
        settings.updateView();
    }
    

}
