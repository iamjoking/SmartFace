/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package faceverificationgui;

import java.io.File;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.plaf.ComboBoxUI;

/**
 *
 * @author bsidb
 */
public class FeatureExtractionForm extends javax.swing.JFrame {

    /**
     * Creates new form FeatureExtractionForm
     */
    public FeatureExtractionForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldInputFiles = new javax.swing.JTextField();
        jButtonInputSelect = new javax.swing.JButton();
        jTextFieldOutputPath = new javax.swing.JTextField();
        jButtonOutputSelect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonExtractorSelect = new javax.swing.JButton();
        jTextFieldOptions = new javax.swing.JTextField();
        jComboBoxExtractor = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButtonRun = new javax.swing.JButton();
        jLabelState = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCL = new javax.swing.JTextArea();
        jButtonGenerate = new javax.swing.JButton();
        jButtonRunCLI = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("faceverificationgui/Bundle"); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, bundle.getString("FeatureExtractionForm.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 2, 14))); // NOI18N

        jTextFieldInputFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldInputFilesActionPerformed(evt);
            }
        });
        jTextFieldInputFiles.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldInputFilesFocusGained(evt);
            }
        });
        jTextFieldInputFiles.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFieldInputFilesPropertyChange(evt);
            }
        });

        jButtonInputSelect.setText(bundle.getString("FeatureExtractionForm.jButtonInputSelect.text")); // NOI18N
        jButtonInputSelect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonInputSelectMouseClicked(evt);
            }
        });
        jButtonInputSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInputSelectActionPerformed(evt);
            }
        });

        jTextFieldOutputPath.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldOutputPathFocusGained(evt);
            }
        });
        jTextFieldOutputPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldOutputPathKeyTyped(evt);
            }
        });

        jButtonOutputSelect.setText(bundle.getString("FeatureExtractionForm.jButtonOutputSelect.text")); // NOI18N
        jButtonOutputSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOutputSelectActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle.getString("FeatureExtractionForm.jLabel1.text")); // NOI18N

        jLabel8.setText(bundle.getString("FeatureExtractionForm.jLabel8.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldOutputPath, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(jTextFieldInputFiles))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonInputSelect, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonOutputSelect, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInputFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonInputSelect)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldOutputPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOutputSelect)
                    .addComponent(jLabel8)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, bundle.getString("FeatureExtractionForm.jPanel2.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Serif", 2, 14))); // NOI18N

        jButtonExtractorSelect.setText(bundle.getString("FeatureExtractionForm.jButtonExtractorSelect.text")); // NOI18N
        jButtonExtractorSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExtractorSelectActionPerformed(evt);
            }
        });

        jComboBoxExtractor.setEditable(true);
        jComboBoxExtractor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "lbp.exe", " " }));
        jComboBoxExtractor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxExtractorActionPerformed(evt);
            }
        });

        jLabel9.setText(bundle.getString("FeatureExtractionForm.jLabel9.text")); // NOI18N

        jLabel10.setText(bundle.getString("FeatureExtractionForm.jLabel10.text")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(93, 93, 93)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldOptions)
                    .addComponent(jComboBoxExtractor, 0, 320, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonExtractorSelect)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonExtractorSelect)
                    .addComponent(jComboBoxExtractor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)))
        );

        jButtonRun.setText(bundle.getString("FeatureExtractionForm.jButtonRun.text")); // NOI18N
        jButtonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunActionPerformed(evt);
            }
        });

        jLabelState.setFont(new java.awt.Font("Sans Serif", 2, 19)); // NOI18N
        jLabelState.setText(bundle.getString("FeatureExtractionForm.jLabelState.text")); // NOI18N
        jLabelState.setAutoscrolls(true);
        jLabelState.setFocusable(false);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("FeatureExtractionForm.jPanel3.border.border.title")))); // NOI18N

        jLabel4.setText(bundle.getString("FeatureExtractionForm.jLabel4.text")); // NOI18N

        jTextAreaCL.setColumns(20);
        jTextAreaCL.setLineWrap(true);
        jTextAreaCL.setRows(5);
        jScrollPane1.setViewportView(jTextAreaCL);

        jButtonGenerate.setText(bundle.getString("FeatureExtractionForm.jButtonGenerate.text")); // NOI18N
        jButtonGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerateActionPerformed(evt);
            }
        });

        jButtonRunCLI.setText(bundle.getString("FeatureExtractionForm.jButtonRunCLI.text")); // NOI18N
        jButtonRunCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunCLIActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonGenerate)
                .addGap(18, 18, 18)
                .addComponent(jButtonRunCLI)
                .addGap(37, 37, 37))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGenerate)
                    .addComponent(jButtonRunCLI)))
        );

        jButtonSave.setText(bundle.getString("FeatureExtractionForm.jButtonSave.text")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Sans Serif", 3, 36)); // NOI18N
        jLabel5.setText(bundle.getString("FeatureExtractionForm.jLabel5.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonRun)
                .addGap(26, 26, 26)
                .addComponent(jButtonSave)
                .addGap(36, 36, 36))
            .addComponent(jLabelState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRun)
                    .addComponent(jButtonSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelState, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldInputFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldInputFilesActionPerformed
        // TODO add your handling code here:
        configure.set(FeatureExtractionConfigure.PINPUTIMAGES, this.jTextFieldInputFiles.getText());
    }//GEN-LAST:event_jTextFieldInputFilesActionPerformed

    private void jTextFieldInputFilesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTextFieldInputFilesPropertyChange
        // Update the CLI
        configure.set(FeatureExtractionConfigure.PINPUTIMAGES, this.jTextFieldInputFiles.getText());
    }//GEN-LAST:event_jTextFieldInputFilesPropertyChange

    private void jButtonInputSelectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonInputSelectMouseClicked

        JFileChooser chooser = new JFileChooser();
        chooser.setMultiSelectionEnabled(true);
        int operation = chooser.showOpenDialog(this);
        if (operation == JFileChooser.APPROVE_OPTION) {
            File[] files = chooser.getSelectedFiles();
            StringBuilder buffer = new StringBuilder();
            for (File file : files) {
                if (buffer.length() != 0) {
                    buffer.append(";");
                }
                buffer.append(file.getPath());
            }
            jTextFieldInputFiles.setText(buffer.toString());
            jTextFieldInputFiles.requestFocus();
        }
    }//GEN-LAST:event_jButtonInputSelectMouseClicked

    private void jTextFieldInputFilesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldInputFilesFocusGained
        // TODO add your handling code here:
        jTextFieldInputFilesActionPerformed(null);
    }//GEN-LAST:event_jTextFieldInputFilesFocusGained

    private void jButtonOutputSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOutputSelectActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        int operation = chooser.showOpenDialog(this);
        if (operation == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            jTextFieldOutputPath.setText(file.getPath() + File.separator);
            jTextFieldOutputPath.requestFocus();
        }
    }//GEN-LAST:event_jButtonOutputSelectActionPerformed

    private void jTextFieldOutputPathKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldOutputPathKeyTyped
        configure.set(FeatureExtractionConfigure.POUTPUTPATH, this.jTextFieldOutputPath.getText());
    }//GEN-LAST:event_jTextFieldOutputPathKeyTyped

    private void jTextFieldOutputPathFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldOutputPathFocusGained
        jTextFieldOutputPathKeyTyped(null);
    }//GEN-LAST:event_jTextFieldOutputPathFocusGained

    private void jComboBoxExtractorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxExtractorActionPerformed
        // TODO add your handling code here:
        configure.set(FeatureExtractionConfigure.PExtractor, jComboBoxExtractor.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBoxExtractorActionPerformed

    private void jButtonGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerateActionPerformed
        jTextAreaCL.setText(generateCommandLineFromGUI());
    }//GEN-LAST:event_jButtonGenerateActionPerformed

    private void jButtonExtractorSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExtractorSelectActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        int operation = chooser.showOpenDialog(this);
        if (operation == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            //jComboBoxExtractor.addItem(file.toPath());
            jComboBoxExtractor.setSelectedItem(file.getPath());
            jTextFieldOutputPath.requestFocus();
        }
    }//GEN-LAST:event_jButtonExtractorSelectActionPerformed

    private void jButtonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunActionPerformed
        RunningCLThread run = new RunningCLThread(generateCommandLineFromGUI(), jLabelState);
        run.start();
    }//GEN-LAST:event_jButtonRunActionPerformed

    private void jButtonRunCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunCLIActionPerformed
        new RunningCLThread(jTextAreaCL.getText(), jLabelState).start();
    }//GEN-LAST:event_jButtonRunCLIActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        //Save to the main GUI
        configure.set(FeatureExtractionConfigure.PINPUTIMAGES, "%INPUT");
        configure.set(FeatureExtractionConfigure.POUTPUTPATH, "%OUTPUT");
        MainGUI.currentGUI.setFESetting(configure.generateCommand());
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonInputSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInputSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonInputSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FeatureExtractionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FeatureExtractionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FeatureExtractionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FeatureExtractionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FeatureExtractionForm().setVisible(true);
            }
        });
    }

    class FeatureExtractionConfigure {

        public static final String PINPUTIMAGES = "InputImages";
        public static final String POUTPUTPATH = "OutputPath";
        public static final String PExtractor = "Extractor";
        public static final String POptions = "Options";
        private java.util.Properties currentConfigure = new Properties();

        public FeatureExtractionConfigure() {
            currentConfigure.setProperty(PINPUTIMAGES, "");
            currentConfigure.setProperty(POUTPUTPATH, "");
            currentConfigure.setProperty(PExtractor, "");
            currentConfigure.setProperty(POptions, "");
        }

        public void set(String key, String value) {
            currentConfigure.setProperty(key, value);
            updateView();
        }

        private String generateCommand() {
            return currentConfigure.getProperty(PExtractor) + " "
                    + currentConfigure.getProperty(PINPUTIMAGES) + " "
                    + currentConfigure.getProperty(POUTPUTPATH) + " "
                    + currentConfigure.getProperty(POptions);
        }

        private void updateView() {
            //Call the outside
        }
    }
    FeatureExtractionConfigure configure = new FeatureExtractionConfigure();

    /**
     * 从当前GUI的设定中产生命令行命令
     *
     * @return 生成的命令
     */
    private String generateCommandLineFromGUI() {
        configure.set(FeatureExtractionConfigure.PExtractor, jComboBoxExtractor.getSelectedItem().toString());
        configure.set(FeatureExtractionConfigure.PINPUTIMAGES, jTextFieldInputFiles.getText());
        configure.set(FeatureExtractionConfigure.POUTPUTPATH, jTextFieldOutputPath.getText());
        configure.set(FeatureExtractionConfigure.POptions, jTextFieldOptions.getText());
        return configure.generateCommand();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButtonExtractorSelect;
    javax.swing.JButton jButtonGenerate;
    javax.swing.JButton jButtonInputSelect;
    javax.swing.JButton jButtonOutputSelect;
    javax.swing.JButton jButtonRun;
    javax.swing.JButton jButtonRunCLI;
    javax.swing.JButton jButtonSave;
    javax.swing.JComboBox jComboBoxExtractor;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel10;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel8;
    javax.swing.JLabel jLabel9;
    javax.swing.JLabel jLabelState;
    javax.swing.JPanel jPanel1;
    javax.swing.JPanel jPanel2;
    javax.swing.JPanel jPanel3;
    javax.swing.JScrollPane jScrollPane1;
    javax.swing.JTextArea jTextAreaCL;
    javax.swing.JTextField jTextFieldInputFiles;
    javax.swing.JTextField jTextFieldOptions;
    javax.swing.JTextField jTextFieldOutputPath;
    // End of variables declaration//GEN-END:variables
}
